<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: paper-clip | Unblog]]></title>
  <link href="http://unblog.ikito.ru/blog/categories/paper-clip/atom.xml" rel="self"/>
  <link href="http://unblog.ikito.ru/"/>
  <updated>2014-06-13T14:08:39+06:00</updated>
  <id>http://unblog.ikito.ru/</id>
  <author>
    <name><![CDATA[Hakimovis]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby On Rails и загрузка изображений на Amazon S3 Storage]]></title>
    <link href="http://unblog.ikito.ru/blog/ruby-on-rails-i-zaghruzka-izobrazhienii-na-amazon-s3-storage"/>
    <updated>2013-05-12T23:23:00+06:00</updated>
    <id>http://unblog.ikito.ru/blog/ruby-on-rails-i-zaghruzka-izobrazhienii-na-amazon-s3-storage</id>
    <content type="html"><![CDATA[<p>Даже не подозревал, что прикрутить аплоад картинок на амазоновый S3 окажется так просто. Добавляем гемы в Gemfile:</p>

<p>``` ruby</p>

<pre><code>gem 'paperclip'
gem 'aws-sdk'
</code></pre>

<p>```</p>

<p>Делаем миграцию:</p>

<p>``` ruby
class CreatePhotos &lt; ActiveRecord::Migration
  def self.up</p>

<pre><code>create_table :photos do |t|
  t.boolean :enabled, null: false, default: true
  t.timestamps
end
add_attachment :photos, :image
</code></pre>

<p>  end</p>

<p>  def self.down</p>

<pre><code>drop_table :photos
</code></pre>

<p>  end
end
```</p>

<p>Тут у модели Photo будет только два поля - image и enabled (КО). Теперь модель:
``` ruby
class Photo &lt; ActiveRecord::Base
  attr_accessible :enabled, :image
  has_attached_file(</p>

<pre><code>:image,
styles: {medium: "500x500&gt;", small: "50x50&gt;"},
storage: :s3,
s3_credentials: "#{Rails.root}/config/s3.yml",
bucket: 'bucket_name',
s3_protocol: 'https',
s3_host_name: 's3-eu-west-1.amazonaws.com'
</code></pre>

<p>  )
end
```</p>

<p>Тут все в принципе ясно. Изображение будет храниться еще в двух размерах - medium (500x500) и small (50x50). Пришлось немного почесать голову над последними двумя опциями, без них Амазон будет ругаться XML-кой с просьбой указать endpoint. В s3.yml пишем свои ключи отсюда <a href="https://portal.aws.amazon.com/gp/aws/securityCredentials#account_identifiers">portal.aws.amazon.com</a> (не забывая добавить этот конфиг в .gitignore):</p>

<p><code>
access_key_id: *****
secret_access_key: ******
</code></p>

<p>Вот и вся магия. Теперь в форме загрузки будем писать так:</p>

<p>``` haml
= form_for @photo, url: photos_path, html: {id: "photo_form", multipart: true} do |f|
  = f.file_field :image
  = f.check_box :enabled
  .actions</p>

<pre><code>= f.submit 'Сохранить'
</code></pre>

<p>```</p>

<p>И чтобы показать нашу картинку в среднем размере со ссылкой на оригинал в шаблонах пишем:</p>

<p><code>haml
%a{href: @photo.image.url}= image_tag @photo.image.url :medium
</code></p>

<p>Ну не радость ли?</p>
]]></content>
  </entry>
  
</feed>
