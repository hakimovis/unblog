<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: bundler | Unblog]]></title>
  <link href="http://unblog.ikito.ru/blog/categories/bundler/atom.xml" rel="self"/>
  <link href="http://unblog.ikito.ru/"/>
  <updated>2013-06-24T12:31:55+06:00</updated>
  <id>http://unblog.ikito.ru/</id>
  <author>
    <name><![CDATA[Hakimovis]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Узнайте bundler лучше]]></title>
    <link href="http://unblog.ikito.ru/blog/uznaitie-bundler-luchshie"/>
    <updated>2013-03-15T22:27:00+06:00</updated>
    <id>http://unblog.ikito.ru/blog/uznaitie-bundler-luchshie</id>
    <content type="html"><![CDATA[<p>Статья про bundler, много интересного: <a href="http://habrahabr.ru/company/engineyard/blog/172807/">http://habrahabr.ru/company/engineyard/blog/172807/</a></p>

<p>Вкратце:<br/>
<strong>bundle outdated</strong> показывает список гемов, которые можно обновить.<br/>
<strong>bundle show</strong> показывает путь, куда установлен гем.<br/>
<strong>bundle open</strong> открывает код гема в редакторе:</p>

<pre><code>$ bundle open json
To open a bundled gem, set $EDITOR or $BUNDLER_EDITOR
$ export EDITOR=vim
$ bundle open json
</code></pre>

<p><strong>bundle prestine</strong> восстанавливает код указанного гема, если мы его подправляли редактором (используя bundle open)<br/>
<strong>bundle show --path</strong> показывает список путей, где установлены все гемы проекта. Вроде, так можно найти файлы, где определяются интересные нам классы:</p>

<pre><code>grep -R ActionDispatch::RemoteIp `bundle show --paths`
</code></pre>

<p><strong>bundle init</strong> создает пустой Gemfile<br/>
Гемы можно брать из локального репозитория:</p>

<pre><code>$ echo "gem 'rack', :github =&gt; 'rack/rack', :branch =&gt; 'master'" &gt;&gt; Gemfile
$ bundle config local.rack ~/sw/gems/rack
$ bundle show rack
/Users/andre/sw/gems/rack
</code></pre>

<p>В bundler 1.2 прямо в Gemfile можно объявить версию ruby. Если текущая версия не будет совпадать, получим исключение:</p>

<pre><code>ruby '1.9.3'
</code></pre>

<p>Можно построить визуальную схему зависимостей гемов:</p>

<pre><code>$ brew install graphviz
$ gem install ruby-graphviz
$ bundle viz
</code></pre>

<p><strong>bundle console</strong> запустит ruby-консоль, но со всеми загруженными гемами, указанными в Gemfile. Удобно, если нам не нужен гем rails.</p>

<p>Создание заготовки для своего гема, установка его в систему и публикация на rubygems.org:</p>

<pre><code>bundle gem my\_super\_gem
rake install
rake release
</code></pre>

<p>Вот так можно запускать rake-таски без полного написания bundle exec rspec spec:</p>

<pre><code>$ bundle binstubs rspec-core
$ bin/rspec spec
No examples found.
</code></pre>
]]></content>
  </entry>
  
</feed>
